(()=>{const t=L.map("map").setView([49.8397,31.7604],6),n={"Dark Map":L.tileLayer("https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png",{attribution:"CartoDB",name:"Dark Map"}),"Google Hybrid":L.tileLayer("http://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}",{attribution:"Google",name:"Google Hybrid"}).addTo(t)},e={};async function o(t){try{const n=await fetch(t),e=(await n.text()).split("\n"),o=e[0].split(",").map((t=>t.trim())),a=[];for(let t=1;t<e.length;t++){if(""===e[t].trim())continue;const n=e[t].split(","),r={};for(let t=0;t<o.length;t++)r[o[t]]=n[t]?n[t].trim():"";a.push(r)}return a}catch(t){return console.error("Error parsing CSV:",t),[]}}function a(t){return new Date(t).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}document.addEventListener("DOMContentLoaded",(async()=>{await async function(t,n,a="sub_event_type"){try{const r=await o(n),i=L.featureGroup().addTo(t);let s;e["EO incidents"]=i;try{s=L.icon({iconUrl:"img/Exclamation_point.png",iconSize:[8,8],iconAnchor:[4,4],popupAnchor:[0,-4]})}catch(t){console.warn("Custom icon not found, using default icon"),s=new L.Icon.Default}return r.forEach((t=>{const n=parseFloat(t.latitude),e=parseFloat(t.longitude);if(isNaN(n)||isNaN(e))return;const o=`\n                <b>${t[a]||"Unknown"}</b><br>\n                <b>Event Date:</b> ${t.event_date||"N/A"}<br>\n                <b>Oblast:</b> ${t.admin1||"N/A"}<br>\n                <b>Location:</b> ${t.location||"N/A"}<br>\n                <b>Fatalities:</b> ${t.fatalities||"N/A"}<br>\n                <b>Notes:</b> ${t.notes||"N/A"}<br>\n                <b>Actor 1:</b> ${t.actor1||"N/A"}<br>\n                <b>Actor 2:</b> ${t.actor2||"N/A"}<br>\n                <b>Source:</b> ${t.source||"N/A"}<br>\n            `;L.marker([n,e],{icon:s}).bindPopup(o,{maxWidth:300}).addTo(i)})),i}catch(t){return console.error("Error adding markers from CSV:",t),null}}(t,"data/Ukraine_landmine_ERW_only.csv","sub_event_type"),await async function(t,n,a="Density of incidents related to ERW"){try{if(!L.heatLayer)return console.error("Leaflet.heat plugin is not loaded. Please include leaflet-heat.js"),null;const r=(await o(n)).map((t=>{const n=parseFloat(t.latitude),e=parseFloat(t.longitude);return isNaN(n)||isNaN(e)?null:[n,e]})).filter((t=>null!==t)),i=L.heatLayer(r,{radius:25,blur:15,maxZoom:17}).addTo(t);e["EO Density"]=i;const s=L.control({position:"bottomright"});return s.onAdd=function(t){const n=L.DomUtil.create("div","info legend");return n.innerHTML=`\n                <h4>${a}</h4>\n                <div class="legend-gradient"></div>\n                <div class="legend-labels">\n                    <span>Low</span>\n                    <span>High</span>\n                </div>\n            `,n},s.addTo(t),i}catch(t){return console.error("Error adding heatmap from CSV:",t),null}}(t,"data/Ukraine_landmine_ERW_only.csv"),await async function(t){try{const n=await fetch("data/frontline.json"),o=await n.json();let r="Unknown";if(o.name&&o.name.includes("_")){const t=o.name.split("_").pop();if(t&&8===t.length){const n=t.substring(0,4),e=t.substring(4,6),o=t.substring(6,8);r=`${n}-${e}-${o}`}}const i=L.geoJSON(o,{style:{color:"red",weight:2,opacity:1,fillColor:"#ffcccb",fillOpacity:.3},onEachFeature:function(n,e){e.on("click",(function(n){const e=a(r);L.popup().setLatLng(n.latlng).setContent(`<b>Frontline Date:</b> ${e}`).openOn(t)}))}}).addTo(t);return e.Frontline=i,i}catch(t){return console.error("Error adding frontline from GeoJSON:",t),null}}(t),await async function(t){try{const n=await fetch("data/landuse.json"),o=await n.json(),a={farmland:"#E8D06D",urban:"#C0C0C0",forest:"#228B22",industrial:"#8B4513",wetland:"#6495ED",orchard:"#98FB98",infrastructure:"#708090",grassland:"#7CFC00",vineyard:"#9370DB","water body":"#1E90FF"},r={damaged:.6,"severely damaged":.7,destroyed:.8,contaminated:.5,mined:.4,"partially damaged":.5,recovering:.3,abandoned:.2,rebuilding:.4,repurposed:.5,"heavily damaged":.7,reconstructed:.3},i=L.geoJSON(o,{style:function(t){const n=t.properties.landuse_type,e=t.properties.status;return{color:"#000",weight:1,opacity:.8,fillColor:a[n]||"#808080",fillOpacity:r[e]||.5}},onEachFeature:function(t,n){const e=t.properties,o=`\n                    <div class="land-use-popup">\n                        <h3>${e.landuse_type.toUpperCase()} - ${e.status}</h3>\n                        <p><strong>Location:</strong> ${e.oblast} Oblast</p>\n                        <p><strong>Area:</strong> ${e.area_hectares} hectares</p>\n                        <p><strong>Damage:</strong> ${e.damage_percent}%</p>\n                        <p><strong>Cause:</strong> ${e.damage_cause}</p>\n                        <p><strong>Previous use:</strong> ${e.previous_use}</p>\n                        <p><strong>Current use:</strong> ${e.current_use}</p>\n                        <p><strong>Notes:</strong> ${e.notes}</p>\n                    </div>\n                `;n.bindPopup(o,{maxWidth:300})}}).addTo(t);e["Land Use Changes"]=i;const s=L.control({position:"bottomright"});return s.onAdd=function(t){const n=L.DomUtil.create("div","info legend land-use-legend");n.innerHTML="<h4>Land Use Types</h4>";for(const[t,e]of Object.entries(a))n.innerHTML+=`\n                    <div class="legend-item">\n                        <span class="legend-color" style="background-color: ${e}"></span>\n                        <span class="legend-label">${t.charAt(0).toUpperCase()+t.slice(1)}</span>\n                    </div>\n                `;return n},s.addTo(t),i}catch(t){return console.error("Error adding land use data from GeoJSON:",t),null}}(t),await async function(t,n){try{const o=L.layerGroup().addTo(t),r=(await fetch(`${n}/`),(await async function(){try{const t=[],n=new Date("2024-07-08"),e=new Date("2025-06-17");for(let o=new Date(n);o<=e;o.setDate(o.getDate()+1)){const n=o.getFullYear(),e=String(o.getMonth()+1).padStart(2,"0"),a=String(o.getDate()).padStart(2,"0");t.push(`deepstatemap_data_${n}${e}${a}.geojson`)}return t}catch(t){return console.error("Error listing files in directory:",t),[]}}()).filter((t=>t.endsWith(".geojson"))).map((t=>{const n=t.split("_").pop().split(".")[0];return n&&8===n.length?`${n.substring(0,4)}-${n.substring(4,6)}-${n.substring(6,8)}`:null})).filter((t=>null!==t)).sort(((t,n)=>new Date(t)-new Date(n)))),i={};r.forEach((t=>{const e=t.replace(/-/g,""),o=`${n}/deepstatemap_data_${e}.geojson`;i[t]=o}));const s={};return e["Frontline Timeline"]=o,async function(t,n,e,o,r){const i=L.DomUtil.create("div","timeline-container");i.id="timeline-container",document.body.appendChild(i);const s=L.DomUtil.create("div","timeline-control",i);s.id="timeline-control";const l=L.DomUtil.create("button","",s);l.id="play-button",l.textContent="Play";const c=L.DomUtil.create("input","",s);c.id="timeline-slider",c.type="range",c.min=0,c.max=n.length-1,c.value=0;const d=L.DomUtil.create("div","",s);async function u(n){if(o[n])return o[n];try{const r=e[n],i=await fetch(r),s=await i.json(),l=L.geoJSON(s,{style:{color:"green",weight:2,opacity:1,fillColor:"#90EE90",fillOpacity:.3},onEachFeature:function(e,o){o.on("click",(function(e){const o=a(n);L.popup().setLatLng(e.latlng).setContent(`<b>Frontline Date:</b> ${o}`).openOn(t)}))}});return o[n]=l,l}catch(t){return console.error(`Error loading layer for date ${n}:`,t),null}}async function p(t){d.textContent="Loading...",r.clearLayers();const e=n[t],o=await u(e);o&&o.addTo(r),d.textContent=a(e)}d.id="date-display",d.textContent=a(n[0]),await p(0);for(let t=1;t<Math.min(5,n.length);t++)u(n[t]);c.addEventListener("input",(function(){p(parseInt(this.value))}));let g,f=!1;l.addEventListener("click",(function(){if(f)clearInterval(g),l.textContent="Play",f=!1;else{l.textContent="Pause",f=!0;let t=parseInt(c.value);const e=10;for(let o=1;o<=e;o++){const e=(t+o)%n.length;u(n[e])}g=setInterval((async()=>{t=(t+1)%n.length,c.value=t,await p(t);const o=(t+e)%n.length;u(n[o]),t===n.length-1&&(clearInterval(g),l.textContent="Play",f=!1)}),100)}}))}(t,r,i,s,o),o}catch(t){return console.error("Error adding frontline timeline from directory:",t),null}}(t,"datatimeline"),function(t){try{const n=L.Control.geocoder({defaultMarkGeocode:!1,position:"topleft",placeholder:"Search for a city...",errorMessage:"Nothing found.",geocoder:L.Control.Geocoder.nominatim({geocodingQueryParams:{countrycodes:"ua",viewbox:"22.0,44.0,40.0,52.5",bounded:1}})}).addTo(t);return n.on("markgeocode",(function(n){const e=n.geocode.bbox,o=L.polygon([e.getSouthEast(),e.getNorthEast(),e.getNorthWest(),e.getSouthWest()]);t.fitBounds(o.getBounds()),L.marker(n.geocode.center).addTo(t).bindPopup(n.geocode.name).openPopup()})),n}catch(t){return console.error("Error adding city search control:",t),null}}(t),L.control.layers(n,e).addTo(t)}))})();